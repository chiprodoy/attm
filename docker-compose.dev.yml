services:
  # ==========================
  # LARAVEL APP (PHP + Nginx)
  # ==========================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/storage:/var/www/storage
      - ./backend/bootstrap/cache:/var/www/bootstrap/cache
    environment:
      - DB_HOST=db
      - DB_PORT=3306
    depends_on:
      - db
    networks:
      - laravel_net

  # ==========================
  # NGINX SERVER
  # ==========================
  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
       # mount read-only dari container app (bukan host)
      - app_data:/var/www:ro         
    depends_on:
      - app
    networks:
      - laravel_net

  # ==========================
  # MYSQL DATABASE
  # ==========================
  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/db_init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password            
    networks:
      - laravel_net

  # ==========================
  # PHPMYADMIN
  # ==========================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      UPLOAD_LIMIT: 64M
      MEMORY_LIMIT: 1G # Adjust this value as needed (e.g., 1G)
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - laravel_net
  # ==========================
  # LARAVEL SCHEDULER (CRON)
  # ==========================
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_scheduler
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    command: >
      sh -c "echo '* * * * * cd /var/www && /usr/local/bin/php artisan schedule:work >> /var/www/storage/logs/laravel-scheduler.log 2>&1' > /etc/cron.d/laravel-scheduler
      && chmod 0644 /etc/cron.d/laravel-scheduler
      && crontab /etc/cron.d/laravel-scheduler
      && touch /var/www/storage/logs/cron.log
      && cron -f"
    depends_on:
      - app
    environment:
      - TZ=Asia/Jakarta
    networks:
      - laravel_net

volumes:
  db_data:
  app_data:
  
# ==========================
# NETWORK & VOLUME
# ==========================
networks:
  laravel_net:
    driver: bridge

volumes:
  db_data:

